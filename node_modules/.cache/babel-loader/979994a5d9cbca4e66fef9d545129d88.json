{"ast":null,"code":"import _objectSpread from\"D:\\\\WebDev-coursera\\\\open\\\\Project_React1\\\\React\\\\confusion\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Comments=function Comments(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{errMess:null,comments:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_COMMENTS:return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:null,comments:action.payload});case ActionTypes.COMMENTS_FAILED:return _objectSpread(_objectSpread({},state),{},{isLoading:false,errMess:action.payload,comments:[]});case ActionTypes.ADD_COMMENT:var comment=action.payload;return _objectSpread(_objectSpread({},state),{},{comments:state.comments.concat(comment)});default:return state;}};","map":{"version":3,"sources":["D:/WebDev-coursera/open/Project_React1/React/confusion/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","isLoading","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"sLAAA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAGV,IAHWC,CAAAA,KAGX,2DAHmB,CAC7BC,OAAO,CAAE,IADoB,CAE7BC,QAAQ,CAAE,EAFmB,CAGnB,IAAXC,CAAAA,MAAW,2CACV,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,WAAW,CAACO,YAAjB,CACI,sCAAYL,KAAZ,MAAmBM,SAAS,CAAE,KAA9B,CAAqCL,OAAO,CAAE,IAA9C,CAAoDC,QAAQ,CAAEC,MAAM,CAACI,OAArE,GAEJ,IAAKT,CAAAA,WAAW,CAACU,eAAjB,CACI,sCAAYR,KAAZ,MAAmBM,SAAS,CAAE,KAA9B,CAAqCL,OAAO,CAAEE,MAAM,CAACI,OAArD,CAA8DL,QAAQ,CAAE,EAAxE,GAEJ,IAAKJ,CAAAA,WAAW,CAACW,WAAjB,CACI,GAAIC,CAAAA,OAAO,CAAGP,MAAM,CAACI,OAArB,CACA,sCAAYP,KAAZ,MAAmBE,QAAQ,CAAEF,KAAK,CAACE,QAAN,CAAeS,MAAf,CAAsBD,OAAtB,CAA7B,GAEJ,QACI,MAAOV,CAAAA,KAAP,CAZR,CAcH,CAlBM","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, isLoading: false, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, comments: [] };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}