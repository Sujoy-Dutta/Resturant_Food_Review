{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebDev-coursera\\\\React\\\\confusion\\\\src\\\\components\\\\DishDetailsComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Col, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, FormGroup, Label, Form, Input, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => !val || val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this); //this.handleLogin = this.handleLogin.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  } // handleLogin(event){\n  //     this.toggleModal();\n  //     alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \"Remember: \" + this.remember.checked);\n  //     event.preventDefault();\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa fa-pencil fa-lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), \"Submit Comment\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 45\n      }\n    }, \"Rating\"), /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      id: \"rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 49\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 49\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 49\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 49\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 49\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"yourname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }, \"Your Name\"), /*#__PURE__*/React.createElement(Control.text, {\n      model: \".yourname\",\n      id: \"yourname\",\n      name: \"yourname\",\n      className: \"form-control\",\n      validators: {\n        required,\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".yourname\",\n      show: \"touched\",\n      messages: {\n        required: 'Required',\n        minLength: 'Must be greater than 2 charactors',\n        maxLength: 'Must be 15 charactors or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, \"Comment\"), /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      className: \"form-control\",\n      rows: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      value: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 37\n      }\n    }, \"Submit\"))))));\n  }\n\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  if (comments != null) {\n    var renderingComment = comments.map(function (comment, index) {\n      var date = new Date(comment.date); //var date = new Intl.DateTimeFormat('en-US',{year: 'numeric', month:'short', day:'2-digit'}).format(new Date(Date.parse({comment.date)));\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 18\n        }\n      }, \" \", comment.comment, \" \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 55\n        }\n      }), \" \", \"--\", comment.author, \" \", \",\", \" \", date.toDateString());\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 32\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"list-unstyled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 32\n      }\n    }, renderingComment), /*#__PURE__*/React.createElement(CommentForm, {\n      dishId: dishId,\n      addComment: addComment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }\n    })))));\n  }\n}\n\nfunction RenderDish({\n  dish\n}) {\n  if (dish != null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-12 col-md-5 m-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      alt: dish.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 33\n      }\n    }, dish.description))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    });\n  }\n}\n\nconst DishDetail = props => {\n  const PDish = props.dish;\n  const cmt = props.comments;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 45\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 45\n    }\n  }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(RenderDish, {\n    dish: PDish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(RenderComments, {\n    comments: cmt,\n    addComment: props.addComment,\n    dishId: props.dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }))));\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["D:/WebDev-coursera/React/confusion/src/components/DishDetailsComponent.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardText","CardBody","CardTitle","Col","Breadcrumb","BreadcrumbItem","Button","Modal","ModalHeader","ModalBody","FormGroup","Label","Form","Input","Row","Link","Control","LocalForm","Errors","required","val","length","maxLength","len","minLength","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","values","addComment","dishId","rating","author","comment","setState","render","RenderComments","comments","renderingComment","map","index","date","Date","toDateString","RenderDish","dish","image","name","description","DishDetail","PDish","cmt","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,EAAcC,OAAd,EAAuBC,cAAvB,EAAuCC,QAAvC,EAAiDC,QAAjD,EAA2DC,SAA3D,EAAsEC,GAAtE,EAA2EC,UAA3E,EAAuFC,cAAvF,EAAuGC,MAAvG,EAAgHC,KAAhH,EAAuHC,WAAvH,EAAoIC,SAApI,EAA+IC,SAA/I,EAA0JC,KAA1J,EAAiKC,IAAjK,EAAuKC,KAAvK,EAA8KC,GAA9K,QAAwL,YAAxL;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,EAAiBC,SAAjB,EAA4BC,MAA5B,QAAyC,kBAAzC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAASA,GAAG,IAAIA,GAAG,CAACC,MAArC;;AACA,MAAMC,SAAS,GAAIC,GAAD,IAAUH,GAAD,IAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAA7D;;AACA,MAAMC,SAAS,GAAID,GAAD,IAAUH,GAAD,IAAS,CAAEA,GAAF,IAAWA,GAAG,CAACC,MAAJ,IAAcE,GAA7D;;AAEA,MAAME,WAAN,SAA0B7B,SAA1B,CAAmC;AAE/B8B,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB,CAPc,CAQd;;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAEH;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChB,SAAKH,WAAL;AACA,SAAKH,KAAL,CAAWO,UAAX,CAAsB,KAAKP,KAAL,CAAWQ,MAAjC,EAAyCF,MAAM,CAACG,MAAhD,EAAwDH,MAAM,CAACI,MAA/D,EAAuEJ,MAAM,CAACK,OAA9E;AAEH;;AAEDR,EAAAA,WAAW,GAAE;AACT,SAAKS,QAAL,CAAc;AACVV,MAAAA,WAAW,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADf,KAAd;AAGH,GAzB8B,CA2B/B;AACA;AACA;AACA;AACA;;;AAEAW,EAAAA,MAAM,GAAE;AACJ,wBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKV,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,mBADL,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACY,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,WAA1B;AAAuC,MAAA,MAAM,EAAE,KAAKC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAE,KAAKA,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,QAAQ,EAAGG,MAAD,IAAY,KAAKD,YAAL,CAAkBC,MAAlB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,oBAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,KAAK,EAAC,SAAtB;AAAgC,MAAA,EAAE,EAAC,QAAnC;AAA4C,MAAA,IAAI,EAAC,QAAjD;AAA0D,MAAA,SAAS,EAAC,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CAFJ,CADJ,CADJ,eAaI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,OAAD,CAAS,IAAT;AAAc,MAAA,KAAK,EAAC,WAApB;AAAgC,MAAA,EAAE,EAAC,UAAnC;AAA8C,MAAA,IAAI,EAAC,UAAnD;AAA8D,MAAA,SAAS,EAAC,cAAxE;AACI,MAAA,UAAU,EAAE;AACRd,QAAAA,QADQ;AACEK,QAAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CADtB;AAC2BF,QAAAA,SAAS,EAAEA,SAAS,CAAC,EAAD;AAD/C,OADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAOI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,KAAK,EAAC,WAAtC;AAAkD,MAAA,IAAI,EAAC,SAAvD;AACI,MAAA,QAAQ,EAAE;AACNH,QAAAA,QAAQ,EAAE,UADJ;AAENK,QAAAA,SAAS,EAAE,mCAFL;AAGNF,QAAAA,SAAS,EAAE;AAHL,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CAbJ,eA+BI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAC,UAAxB;AAAmC,MAAA,EAAE,EAAC,SAAtC;AAAgD,MAAA,IAAI,EAAC,SAArD;AAA+D,MAAA,SAAS,EAAC,cAAzE;AAAwF,MAAA,IAAI,EAAC,GAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CA/BJ,eAsCI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCJ,CADJ,CAHJ,CADZ,CAPJ,CADA;AA2DH;;AA7F8B;;AAmGlC,SAASmB,cAAT,CAAwB;AAACC,EAAAA,QAAD;AAAWR,EAAAA,UAAX;AAAwBC,EAAAA;AAAxB,CAAxB,EAAwD;AAClD,MAAGO,QAAQ,IAAI,IAAf,EAAoB;AACjB,QAAIC,gBAAgB,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAASN,OAAT,EAAkBO,KAAlB,EAAwB;AAC1D,UAAIC,IAAI,GAAG,IAAIC,IAAJ,CAAST,OAAO,CAACQ,IAAjB,CAAX,CAD0D,CAE1D;;AAGF,0BAAO;AAAI,QAAA,GAAG,EAAED,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmBP,OAAO,CAACA,OAA3B,oBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC,OAAiD,IAAjD,EAAuDA,OAAO,CAACD,MAA/D,OAAwE,GAAxE,OAA8ES,IAAI,CAACE,YAAL,EAA9E,CAAP;AACD,KANwB,CAAvB;AASC,wBAEY;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BL,gBAA/B,CAFA,eAGA,oBAAC,WAAD;AAAa,MAAA,MAAM,EAAER,MAArB;AAA6B,MAAA,UAAU,EAAED,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAFJ,CADJ,CADA,CAFZ;AAkBH;AACJ;;AAGJ,SAASe,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA2B;AACnB,MAAGA,IAAI,IAAI,IAAX,EAAgB;AACZ,wBACY;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACC,KAAhC;AAAuC,MAAA,GAAG,EAAED,IAAI,CAACE,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYF,IAAI,CAACE,IAAjB,CADJ,eAEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWF,IAAI,CAACG,WAAhB,CAFJ,CAHJ,CAFA,CADZ;AAeH,GAhBD,MAiBI;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;AACJ;;AAEL,MAAMC,UAAU,GAAI3B,KAAD,IAAW;AAEvB,QAAM4B,KAAK,GAAG5B,KAAK,CAACuB,IAApB;AACA,QAAMM,GAAG,GAAG7B,KAAK,CAACe,QAAlB;AAIC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB,CADJ,eAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAhB,CAFJ,eAGI,oBAAC,cAAD;AAAgB,IAAA,MAAM,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBf,KAAK,CAACuB,IAAN,CAAWE,IAAnC,CAHJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKzB,KAAK,CAACuB,IAAN,CAAWE,IAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANJ,eAUQ,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAIG,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVR,eAWQ,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAIC,GAA5B;AACA,IAAA,UAAU,EAAG7B,KAAK,CAACO,UADnB;AAEA,IAAA,MAAM,EAAEP,KAAK,CAACuB,IAAN,CAAWO,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXR,CADJ,CADJ,CADJ;AAwBH,CA/BL;;AAkCA,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Col, Breadcrumb, BreadcrumbItem, Button,  Modal, ModalHeader, ModalBody, FormGroup, Label, Form, Input, Row} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, LocalForm, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\n\r\nclass CommentForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            \r\n            isModalOpen: false\r\n        };\r\n        \r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        //this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n    }\r\n\r\n    handleSubmit(values){\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n        \r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    // handleLogin(event){\r\n    //     this.toggleModal();\r\n    //     alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \"Remember: \" + this.remember.checked);\r\n    //     event.preventDefault();\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n        <React.Fragment>\r\n            <div>\r\n                 <Button outline onClick={this.toggleModal}> \r\n                    <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment\r\n                </Button>\r\n            </div>\r\n\r\n            <div className=\"col-12 col-md-9\">\r\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                           \r\n                            <ModalBody>\r\n                                <LocalForm onSubmit={(values) => this.handleSubmit(values)}> \r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={12}>\r\n                                            <Label htmlFor=\"rating\" >Rating</Label>                                     \r\n                                            <Control.select model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control\">\r\n                                                <option>1</option>\r\n                                                <option>2</option>\r\n                                                <option>3</option>\r\n                                                <option>4</option>\r\n                                                <option>5</option>\r\n                                            </Control.select>\r\n                                        </Col>                                        \r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={12}>\r\n                                            <Label htmlFor=\"yourname\" >Your Name</Label>                                     \r\n                                            <Control.text model=\".yourname\" id=\"yourname\" name=\"yourname\" className=\"form-control\"\r\n                                                validators={{\r\n                                                    required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                                }}\r\n                                            />\r\n                                            <Errors className=\"text-danger\" model=\".yourname\" show=\"touched\"\r\n                                                messages={{\r\n                                                    required: 'Required',\r\n                                                    minLength: 'Must be greater than 2 charactors',\r\n                                                    maxLength: 'Must be 15 charactors or less'\r\n                                                    \r\n                                                }}\r\n                                            />\r\n                                        </Col>                                        \r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={12}>\r\n                                            <Label htmlFor=\"comment\" >Comment</Label>                                     \r\n                                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" className=\"form-control\" rows=\"6\"/>\r\n                                        </Col>                                        \r\n                                    </Row>\r\n \r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n        \r\n                                </LocalForm>\r\n                            </ModalBody>\r\n                        </Modal>\r\n            </div>\r\n        </React.Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n    \r\n\r\n function RenderComments({comments, addComment , dishId}){\r\n       if(comments != null){\r\n          var renderingComment = comments.map(function(comment, index){\r\n            var date = new Date(comment.date);\r\n            //var date = new Intl.DateTimeFormat('en-US',{year: 'numeric', month:'short', day:'2-digit'}).format(new Date(Date.parse({comment.date)));\r\n            \r\n            \r\n          return <li key={index} > {comment.comment} {<br></br>} {\"--\"}{comment.author} {\",\"} {date.toDateString()}</li>\r\n        });\r\n            \r\n            \r\n           return(\r\n            \r\n                       <div className=\"col-12 col-md-5 m-1\">\r\n                       <Card>\r\n                           <CardBody>\r\n                               <CardTitle>Comments</CardTitle>\r\n                               <CardText>\r\n                                               \r\n                               <ul className=\"list-unstyled\">{renderingComment }</ul>\r\n                               <CommentForm dishId={dishId} addComment={addComment} />\r\n\r\n                               </CardText>\r\n                           </CardBody>\r\n                       </Card>\r\n                    </div>\r\n\r\n\r\n           )\r\n       }\r\n   }\r\n\r\n\r\nfunction RenderDish({dish}){\r\n        if(dish != null){\r\n            return(\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                        \r\n                        <Card>\r\n                            \r\n                            <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>                   \r\n                        \r\n                        </Card>\r\n                        </div>\r\n \r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\nconst DishDetail = (props) => {\r\n       \r\n       const PDish = props.dish;\r\n       const cmt = props.comments;\r\n    \r\n \r\n        \r\n        return(\r\n            <div>\r\n                <div class=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>{props.dish.name}</h3>\r\n                            <hr></hr>\r\n                        </div>                           \r\n                            <RenderDish dish = {PDish}/>\r\n                            <RenderComments comments = {cmt}\r\n                            addComment ={props.addComment}\r\n                            dishId={props.dish.id}\r\n                            />\r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n             </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default DishDetail;\r\n"]},"metadata":{},"sourceType":"module"}