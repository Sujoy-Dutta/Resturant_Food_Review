{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { DISHES } from '../shared/dishes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n}); //........................../FOR FETCHING DISHES.....................................\n\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + 'dishes').then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n  ;\n  ;\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errMess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errMess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n}); /////...........................FOR FETCHING COMMENTS.....................................\n\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addcomments(comments)));\n  ;\n  ;\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errMess\n});\nexport const addcomments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n}); ////............................/FOR FETCHING PROMOS..............................\n\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading(true));\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errMess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errMess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["D:/WebDev-coursera/open/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errMess","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addcomments","commentsFailed","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"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","sourcesContent":["import *  as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n});\r\n\r\n//........................../FOR FETCHING DISHES.....................................\r\n\r\nexport const fetchDishes = () =>(dispatch) =>{\r\n    dispatch(dishesLoading(true));\r\n\r\n\r\n    return fetch(baseUrl +'dishes')\r\n        .then(response=> response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)));;;\r\n}\r\n\r\n\r\nexport const dishesLoading=()=>({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed=(errMess)=>({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addDishes =(dishes) =>({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n/////...........................FOR FETCHING COMMENTS.....................................\r\nexport const fetchComments = () =>(dispatch) =>{\r\n\r\n    return fetch(baseUrl +'comments')\r\n        .then(response=> response.json())\r\n        .then(comments => dispatch(addcomments(comments)));;;\r\n}\r\nexport const commentsFailed=(errMess)=>({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addcomments =(comments) =>({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n////............................/FOR FETCHING PROMOS..............................\r\nexport const fetchPromos = () =>(dispatch) =>{\r\n    dispatch(promosLoading(true));\r\n\r\n\r\n    return fetch(baseUrl +'promotions')\r\n        .then(response=> response.json())\r\n        .then(promos => dispatch(addPromos(promos)));\r\n}\r\n\r\n\r\nexport const promosLoading=()=>({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed=(errMess)=>({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errMess\r\n});\r\n\r\nexport const addPromos =(promos) =>({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}