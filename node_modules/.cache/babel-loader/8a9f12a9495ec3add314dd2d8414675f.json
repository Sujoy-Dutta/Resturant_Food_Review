{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Dishes = (state = {\n  isLoading: true,\n  errMess: null,\n  dishes: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_DISHES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        dishes: action.payload\n      };\n\n    case ActionTypes.DISHES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        dishes: []\n      };\n\n    case ActionTypes.DISHES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload,\n        dishes: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/WebDev-coursera/open/React/confusion/src/redux/dishes.js"],"names":["ActionTypes","Dishes","state","isLoading","errMess","dishes","action","type","ADD_DISHES","payload","DISHES_LOADING","DISHES_FAILED"],"mappings":"AACA,OAAO,KAAMA,WAAb,MAA8B,eAA9B;AAEA,OAAO,MAAMC,MAAM,GAAC,CAACC,KAAK,GAAE;AACpBC,EAAAA,SAAS,EAAE,IADS;AAEpBC,EAAAA,OAAO,EAAE,IAFW;AAGpBC,EAAAA,MAAM,EAAG;AAHW,CAAR,EAIZC,MAJY,KAIH;AACb,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,WAAW,CAACQ,UAAjB;AACI,aAAQ,EAAC,GAAGN,KAAJ;AAAUC,QAAAA,SAAS,EAAE,KAArB;AAA4BC,QAAAA,OAAO,EAAE,IAArC;AAA2CC,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAA1D,OAAR;;AAGJ,SAAKT,WAAW,CAACU,cAAjB;AACI,aAAQ,EAAC,GAAGR,KAAJ;AAAUC,QAAAA,SAAS,EAAE,IAArB;AAA2BC,QAAAA,OAAO,EAAE,IAApC;AAA0CC,QAAAA,MAAM,EAAC;AAAjD,OAAR;;AAGJ,SAAKL,WAAW,CAACW,aAAjB;AAEI,aAAQ,EAAC,GAAGT,KAAJ;AAAUC,QAAAA,SAAS,EAAE,KAArB;AAA4BC,QAAAA,OAAO,EAAEE,MAAM,CAACG,OAA5C;AAAqDJ,QAAAA,MAAM,EAAC;AAA5D,OAAR;;AAEJ;AACI,aAAOH,KAAP;AAdR;AAgBH,CArBM","sourcesContent":["\r\nimport *  as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes=(state ={\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes : [],\r\n    } , action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return  {...state,isLoading :false, errMess: null, dishes: action.payload}\r\n            \r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return  {...state,isLoading :true, errMess: null, dishes:[]}\r\n\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n\r\n            return  {...state,isLoading :false, errMess: action.payload, dishes:[]}\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}