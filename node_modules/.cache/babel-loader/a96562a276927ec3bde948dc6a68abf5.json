{"ast":null,"code":"import*as ActionTypes from'./ActionTypes';import{baseUrl}from'../shared/baseUrl';export var addComment=function addComment(comment){return{type:ActionTypes.ADD_COMMENT,payload:comment};};export var postComment=function postComment(dishId,rating,author,comment){return function(dispatch){var newComment={dishId:dishId,rating:rating,author:author,comment:comment};newComment.date=new Date().toISOString();return fetch(baseUrl+'comments',{method:'POST',body:JSON.stringify(newComment),headers:{'Content-Type':'application/json'},credentials:'same-origin'}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('Post comments: '+error.message);alert('Comments could not be posted:\\n'+error.message);});};};export var fetchDishes=function fetchDishes(){return function(dispatch){dispatch(dishesLoading(true));return fetch(baseUrl+'dishes').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(dishes){return dispatch(addDishes(dishes));}).catch(function(error){return dispatch(dishesFailed(error.message));});};};export var dishesLoading=function dishesLoading(){return function(dispatch){return{type:ActionTypes.DISHES_LOADING};};};export var dishesFailed=function dishesFailed(errmess){return{type:ActionTypes.DISHES_FAILED,payload:errmess};};export var addDishes=function addDishes(dishes){return{type:ActionTypes.ADD_DISHES,payload:dishes};};export var fetchComments=function fetchComments(){return function(dispatch){return fetch(baseUrl+'comments').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(comments){return dispatch(addComments(comments));}).catch(function(error){return dispatch(commentsFailed(error.message));});};};export var commentsFailed=function commentsFailed(errmess){return{type:ActionTypes.COMMENTS_FAILED,payload:errmess};};export var addComments=function addComments(comments){return{type:ActionTypes.ADD_COMMENTS,payload:comments};};export var fetchPromos=function fetchPromos(){return function(dispatch){dispatch(promosLoading(true));return fetch(baseUrl+'promotions').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(promos){return dispatch(addPromos(promos));}).catch(function(error){return dispatch(promosFailed(error.message));});};};export var promosLoading=function promosLoading(){return function(dispatch){return{type:ActionTypes.PROMOS_LOADING};};};export var promosFailed=function promosFailed(errmess){return{type:ActionTypes.PROMOS_FAILED,payload:errmess};};export var addPromos=function addPromos(promos){return{type:ActionTypes.ADD_PROMOS,payload:promos};};export var fetchLeaders=function fetchLeaders(){return function(dispatch){dispatch(leadersLoading(true));return fetch(baseUrl+'leaders').then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(leaders){return dispatch(addLeaders(leaders));}).catch(function(error){return dispatch(leadersFailed(error.message));});};};export var leadersLoading=function leadersLoading(){return function(dispatch){return{type:ActionTypes.LEADERS_LOADING};};};export var leadersFailed=function leadersFailed(errmess){return{type:ActionTypes.LEADERS_FAILED,payload:errmess};};export var addLeaders=function addLeaders(leaders){return{type:ActionTypes.ADD_LEADERS,payload:leaders};};export var postFeedback=function postFeedback(feedback){return function(dispatch){var newFeedback=Object.assign({date:new Date().toISOString()},feedback);return fetch(baseUrl+'feedback',{method:'POST',body:JSON.stringify(newFeedback),headers:{'Content-Type':'application/json'},credentials:'same-origin'}).then(function(response){if(response.ok){return response;}else{var error=new Error('Error '+response.status+': '+response.statusText);error.response=response;throw error;}},function(error){var errorMessage=new Error(error.errorMessage);throw errorMessage;}).then(function(response){return response.json();}).then(function(response){return dispatch(addComment(response));}).catch(function(error){console.log('Post feedback: '+error.message);alert('Feedback could not be posted:\\n'+error.message);});};};","map":{"version":3,"sources":["D:/WebDev-coursera/open/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","comment","type","ADD_COMMENT","payload","postComment","dishId","rating","author","dispatch","newComment","date","Date","toISOString","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errorMessage","json","catch","console","log","message","alert","fetchDishes","dishesLoading","dishes","addDishes","dishesFailed","DISHES_LOADING","errmess","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","postFeedback","feedback","newFeedback","Object","assign"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment,\r\n    };\r\n\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments: ' + error.message);\r\n            alert('Comments could not be posted:\\n' + error.message)\r\n        })\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n    const newFeedback = Object.assign({ date: new Date().toISOString() }, feedback);\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errorMessage = new Error(error.errorMessage);\r\n                throw errorMessage;\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post feedback: ' + error.message);\r\n            alert('Feedback could not be posted:\\n' + error.message)\r\n        })\r\n};"]},"metadata":{},"sourceType":"module"}